apply plugin: 'com.android.application'
apply plugin: 'android-apt'
apply plugin: 'com.fernandocejas.frodo'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'


android {
    compileSdkVersion 24
    buildToolsVersion "24.0.1"

    defaultConfig {
        applicationId "com.example.sam_chordas.stockhawk"
        minSdkVersion 15
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    maven { url "https://jitpack.io" }
}

ext {
    JUNIT_VERSION = '4.12'
    ANDROID_SUPPORT_LIBRARY_VERSION = '24.1.0'
    BUTTERKNIFE_VERSION = '8.2.1'
    RETROFIT_VERSION = '2.1.0'
    GOOGLE_API_VERSION = '9.2.1'
    DAGGER_VERSION = '2.5'
    LEAKCANARY_VERSION = '1.4-beta2'
    SQLBRITE_VERSION = '0.7.0'
    SCHEMATIC_VERSION = '0.6.3'
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile "junit:junit:$JUNIT_VERSION"

    // Note we have included the library dependency using provided instead of compile. We can do that
    // as our annotation will be processed at compile time, we don't need it inside our final application
    // code
    provided project(':library')
    apt project(':compiler')

    compile "com.android.support:appcompat-v7:$ANDROID_SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:design:$ANDROID_SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:support-v4:$ANDROID_SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:cardview-v7:$ANDROID_SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:gridlayout-v7:$ANDROID_SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:cardview-v7:$ANDROID_SUPPORT_LIBRARY_VERSION"

    // GCM for GCMTaskService: Scheduler which schedules network tasks even when phone is asleep.
    compile "com.google.android.gms:play-services-gcm:$GOOGLE_API_VERSION"

    // ButterKnife: Field and Method binding for Android Views
    compile "com.jakewharton:butterknife:$BUTTERKNIFE_VERSION"
    apt "com.jakewharton:butterknife-compiler:$BUTTERKNIFE_VERSION"

    // MPAndroidChart: Implement charts in Android
    compile 'com.github.PhilJay:MPAndroidChart:v3.0.0-beta1'

    // SimonVT/schematic: Automatically generate ContentProviders
    apt "net.simonvt.schematic:schematic-compiler:$SCHEMATIC_VERSION"
    compile "net.simonvt.schematic:schematic:$SCHEMATIC_VERSION"

    // Melynkov FAB: Android FAB which reacts on scroll events. It becomes visible when an
    // attached target is scrolled up and invisible when scrolled down
    compile 'com.melnykov:floatingactionbutton:1.3.0'

    // Afollestad Material Dialog
    compile('com.github.afollestad.material-dialogs:core:0.8.6.1@aar') {
        transitive = true
    }

    // Timber: A more useful Android Logging API
    compile 'com.jakewharton.timber:timber:4.1.2'

    // LeakCanary: A memory detection library for Android and Java.
    // "A small leak will sink a great ship" - Benjamin Franklin
    debugCompile "com.squareup.leakcanary:leakcanary-android:$LEAKCANARY_VERSION"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$LEAKCANARY_VERSION"
    testCompile "com.squareup.leakcanary:leakcanary-android-no-op:$LEAKCANARY_VERSION"

    // Retrofit & OkHttp: Networking Library
    compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:adapter-rxjava:$RETROFIT_VERSION"
    compile 'com.squareup.okhttp3:logging-interceptor:3.3.1'

    // RxAndroid: Simplifying API calls, wrapper classes for models, and making app reactive !!!
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava:1.1.7'

    // SQLBrite: A light-weight wrapper around SQLiteOpenHelper and ContentResolver which introduces
    // reactive stream semantics to queries
    compile "com.squareup.sqlbrite:sqlbrite:$SQLBRITE_VERSION"

    // Dagger 2: A DI framework to modularize the code
    apt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    compile "com.google.dagger:dagger:$DAGGER_VERSION"
    provided 'javax.annotation:jsr250-api:1.0'

    // Stetho: A simple debug bridge for Android
    debugCompile 'com.facebook.stetho:stetho:1.3.1'
    debugCompile 'com.facebook.stetho:stetho-okhttp3:1.3.1'

    // Animations for transforming ViewPager scrolling on Android v13+
    compile 'com.ToxicBakery.viewpager.transforms:view-pager-transforms:1.2.32@aar'

    // PageIndicators for ViewPager
    compile 'com.pacioianu.david:ink-page-indicator:1.2.0'

}
